@mixin container($breakpoint) {
  margin: 0 auto;
  @if ($breakpoint != 0) {
    max-width: $breakpoint;
  } @else {
    max-width: 100%;
  }
}

@mixin breakpoint($query) {
  @media only screen and (min-width:#{$query}) {
    @content;
  }
}

@mixin textGlitch($name, $intensity, $textColor, $background, $highlightColor1, $highlightColor2, $width, $height) {

  color: $textColor;
  position: relative;
  $steps: $intensity;

  // Ensure the @keyframes are generated at the root level
  @at-root {
    // We need two different ones
    @for $i from 1 through 2 {
      @keyframes #{$name}-anim-#{$i} {
        @for $i from 0 through $steps {
          $top: random(100);
          $bottom: random(101 - $top);
          #{percentage($i*(1/$steps))} {
            clip-path: inset(#{$top}% 0 #{$bottom}% 0);
          }
        }
      }
    }
  }
  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background: $background;
  }
  &::after {
    left: 2px;
    text-shadow: -1px 0 $highlightColor1;
    animation: #{$name}-anim-1 3s infinite linear alternate-reverse;
  }
  &::before {
    left: -2px;
    text-shadow: 1px 0 $highlightColor2;
    animation: #{$name}-anim-2 4s infinite linear alternate-reverse;
  }
}
